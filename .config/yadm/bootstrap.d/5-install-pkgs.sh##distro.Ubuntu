#!/bin/bash
#
# Install pkgs: Linux
#
# shellcheck disable=SC1091
test -f "${HELPERS_D}"/common.sh && source "${HELPERS_D}"/common.sh

# Base pkgs
APT_REPOS=(
    # "neovim-ppa/stable"
)
APT_PKGS=(
    atool
    bat
    bitwise
    calc
    cloc
    elinks
    fd-find
    fzf
    htop
    jq
    ripgrep
    rsync
    tig
    tmux
    tree
    zsh
)
NPM_PKGS=(
    neovim
)
PIP_PKGS=(
    pynvim
    trash-cli
)

# Non-ephemeral pkgs
if ! is_true "${Y_EPHEMERAL}"; then
    APT_REPOS+=()
    APT_PKGS+=(
        restic
    )
fi

# Non-headless pkgs
if ! is_true "${Y_HEADLESS}"; then
    APT_REPOS+=(
        "cppiber/ppa"
        "papirus/papirus"
    )
    APT_PKGS+=(
        arandr
        autorandr
        dunst
        gnome-tweaks
        mpv
        network-manager
        nitrogen
        papirus
        pasystray
        peek
        policykit-1-gnome
        ppa-purge
        redshift
        rofi
        screenkey
        scrot
        suckless-tools
        sxiv
        trayer
        xautolock
        xcompmgr
        xmobar
        xmonad libghc-xmonad-dev libghc-xmonad-contrib-dev
        zathura
    )
fi

# MAIN
# ====
msg "Installing pkgs: Ubuntu"

step "Adding apt repos"
for r in "${APT_REPOS[@]}"; do
    if ! grep -q "^deb .*${r}" /etc/apt/sources.list /etc/apt/sources.list.d/*; then
        sudo add-apt-repository -y ppa:"${r}" && sudo apt update
    fi
done
sudo apt update

step "Installing core apps/managers"
sudo apt install -y nodejs npm python3 python3-pip

step "Installing apt packages"
sudo apt install -y "${APT_PKGS[@]}"
[ -f /usr/bin/fd ] || sudo ln -s "$(which fdfind)" /usr/bin/fd

step "Installing npm packages"
npm install -g "${NPM_PKGS[@]}"

step "Installing pip packages"
pip3 install "${PIP_PKGS[@]}"

step "Installing manual packages"
if ! is_callable delta; then
    ver=$(get_latest_github "dandavison/delta")
    if [ -n "${ver}" ]; then
        mkdir -p /tmp/delta
        wget -qO- https://github.com/dandavison/delta/releases/download/"${ver}"/delta-"${ver}"-x86_64-unknown-linux-gnu.tar.gz | \
            tar xvz -C /tmp/delta --strip-components=1 && \
            cp /tmp/delta/delta "${HOME}"/.local/bin && \
            rm /tmp/delta
    fi
fi

if ! is_callable exa; then
    ver=$(get_latest_github "ogham/exa")
    if [ -n "${ver}" ]; then
        wget -q https://github.com/ogham/exa/releases/download/"${ver}"/exa-linux-x86_64-v0.10.1.zip -O /tmp/exa.zip && {
            if unzip /tmp/exa.zip -d /tmp/exa; then
                cp /tmp/exa/bin/exa "${HOME}"/.local/bin
                sudo cp /tmp/exa/completions/exa.bash "${BASH_COMP_DIR}"
                sudo cp /tmp/exa/completions/exa.zsh "${ZSH_COMP_DIR}"/_exa
                sudo cp /tmp/exa/man/exa.1 "${MAN_DIR}"
                rm -rf /tmp/exa
            fi
            rm -rf /tmp/exa.zip
        }
    fi
fi

nvim_ver="0.8.2"
if ! is_callable nvim || \
    [[ "$nvim_ver" != "$(nvim --version | head -1 | grep -o '[0-9]\.[0-9]\.[0-9]')" ]]; then
    dir=~/.local/bin/nvim-linux64
    mkdir -p ~/.local/bin
    rm -rf ${dir}
    mkdir -p ${dir}
    wget -qO- https://github.com/neovim/neovim/releases/download/v${nvim_ver}/nvim-linux64.tar.gz | \
        tar xvz -C ${dir} --strip-components=1 &&
        { rm ~/.local/bin/nvim; ln -s ${dir}/bin/nvim ~/.local/bin/nvim; }
fi

trap bye EXIT
