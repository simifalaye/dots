# vim: filetype=conf
#
# Main tmux configuration file.
#

# Options
# -------

# Set the correct TERM.
set-option -g default-terminal "screen-256color"
# Enable true color.
set-option -ga terminal-overrides ",*256col*:Tc"
# Time to wait after escape is input
set -sg escape-time 10
# Focus events enabled
set-option -g focus-events on
# Path to the history file for tmux commands.
set -s history-file "$TMUX_DATA_DIR/history"

# Set shell
set-option -g default-shell "${SHELL}"
# Mouse support
set-option -g mouse on
# Start window/pane indexes from 1 instead of 0.
set -g base-index 1
set -g pane-base-index 1
# When a window is closed, automatically renumber the other windows in numerical order.
set -g renumber-windows on
# Maximum number of lines held in window/pane history.
set -g history-limit 100000
# Activity bell and whistles
set -g monitor-activity on
# Notify of activity/silence in other windows only.
set -g activity-action other
set -g silence-action other
# Disable all bells.
set -g bell-action none
# Send a bell on activity.
set -g visual-activity off
# Display a status message instead of a bell on silence.
set -g visual-silence on
# Useful for multi-monitor setup
set-window-option -g aggressive-resize on
# Word separators for copy-mode.
set -g word-separators " ._-~=+:;?!@&*()[]{}|<>/"
# Renew environment variables when session is created
set -g update-environment \
  "DISPLAY\
  SSH_ASKPASS\
  SSH_AUTH_SOCK\
  SSH_AGENT_PID\
  SSH_CONNECTION\
  SSH_TTY\
  WINDOWID\
  XAUTHORITY"

# Bindings
# --------

unbind C-b
set -g prefix C-a
bind -N 'Send prefix' C-a send-prefix

# Fix mouse wheel for applications using legacy scroll.
# See https://github.com/tmux/tmux/issues/1320#issuecomment-381952082.
bind -T root 'WheelUpPane' {
  if -Ft= "#{||:#{pane_in_mode},#{mouse_any_flag}}" {
    send -Mt=
  } {
    if -Ft= '#{alternate_on}' {
      send -t= -N 3 Up
    } {
      copy-mode -et=
    }
  }
}
bind -T root 'WheelDownPane' {
  if -Ft= "#{||:#{pane_in_mode},#{mouse_any_flag}}" {
    send -Mt=
  } {
    if -Ft= '#{alternate_on}' {
      send -t= -N 3 Down
    } {
      send -Mt=
    }
  }
}

# Reload config
bind -N 'Reload the tmux configuration' R source-file ${TMUX_CONFIG} \; \
       display-message "${TMUX_CONFIG} reloaded"

# Faster window cycling
bind -N 'Next window' -r C-n next-window
bind -N 'Prev window' -r C-p previous-window

# Session
bind -N 'Create a new session' 'C' command-prompt "new-session -s '%%'"
bind -N 'Detach other clients' 'D' if -F '#{session_many_attached}' \
       'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
       'display "Session has only 1 client attached"'

# use vim-like keys for splits and windows
unbind '"'
unbind %
bind -N 'Split right' v split-window -h -c "#{pane_current_path}"
bind -N 'Split down' s split-window -v -c "#{pane_current_path}"
bind -N 'Move the current window the the left' -r '<' swap-window -d -t -1
bind -N 'Move the current window the the right' -r '>' swap-window -d -t +1

# Cycle-free pane navigation/resizing
# https://github.com/aserowy/tmux.nvim
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -N 'Focus pane left' -n C-h if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind -N 'Focus pane down' -n C-j if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind -N 'Focus pane up' -n C-k if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind -N 'Focus pane right' -n C-l if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
bind -T copy-mode-vi C-h select-pane -L
bind -T copy-mode-vi C-j select-pane -D
bind -T copy-mode-vi C-k select-pane -U
bind -T copy-mode-vi C-l select-pane -R
bind -N 'Resize pane left' -n M-h if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 1'
bind -N 'Resize pane down' -n M-j if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 1'
bind -N 'Resize pane up' -n M-k if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 1'
bind -N 'Resize pane right' -n M-l if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 1'
bind -T copy-mode-vi M-h resize-pane -L 1
bind -T copy-mode-vi M-j resize-pane -D 1
bind -T copy-mode-vi M-k resize-pane -U 1
bind -T copy-mode-vi M-l resize-pane -R 1

# common layouts
bind-key -N 'Layout main-horizontal' + select-layout main-horizontal
bind-key -N 'Layout main-vertical' = select-layout main-vertical
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

# close & quit
bind -N 'Kill the current pane' x kill-pane
bind -N 'Kill the current window' X kill-window
bind -N 'Quit the current session' Q confirm-before -p "kill-session #S? (y/n)" kill-session

# Theme
# -----

# Status bar
set -g status           on
set -g status-position  bottom
set -g monitor-activity off
set-window-option -g status-bg colour00
set-window-option -g status-fg colour05
set-window-option -g window-status-current-format "#[fg=black,bg=blue] #I:#W "
set-window-option -g window-status-format "#[fg=brightblack] #I:#W "
set-window-option -g status-right '#{prefix_highlight} #[fg=green]#H '
set-window-option -g window-status-style fg=white,bg=default
set-window-option -g message-style fg=red,bg=default

# Plugins
# -------

# Install tpm if not installed
TPLUG="$TMUX_DATA_DIR/plugins"
set-environment -g TMUX_PLUGIN_MANAGER_PATH $TPLUG
if "test ! -d $TPLUG/tpm" \
     "run 'git clone https://github.com/tmux-plugins/tpm $TPLUG/tpm && $TPLUG/tpm/bin/install_plugins'"

# List plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'Morantron/tmux-fingers'

# tmux-yank
set -g @yank_selection 'clipboard'
set -g @yank_selection_mouse 'clipboard'
if-shell 'command -v ${TMUX_CLIPBOARD} >/dev/null' \
    "set -g @override_copy_command '${TMUX_CLIPBOARD} > #{pane_tty}'"

# tmux-fingers
set -g @fingers-key C-f
if-shell 'command -v ${TMUX_CLIPBOARD} >/dev/null' \
  "set -g @fingers-main-action '${TMUX_CLIPBOARD} > #{pane_tty}'"
  set -g @fingers-ctrl-action  ':open:'
  set -g @fingers-shift-action ':paste:'

# tmux-resurrect
set -g @resurrect-dir "$TMUX_DATA_DIR/resurrect"
set -g @resurrect-save 'M-s'
set -g @resurrect-restore 'M-r'
set -g @resurrect-capture-pane-contents 'on'

# Initialize the plugin manager (should be last in the config file).
run -b $TPLUG/tpm/tpm
